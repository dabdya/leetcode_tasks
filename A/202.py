class Solution:
    def isHappy(self, n: int) -> bool:
        
        visited = set()
        
        def nxt(n):
            res = 0
            for d in str(n):
                res += int(d)**2
            return res
        
        while n not in visited:
            visited.add(n)
            n = nxt(n)
        
        return n == 1
    
    """
        Идея простая, просто вычисляем очередное число, и добавляем его в список посещенных.
        Если на каком-то шаге получится уже посещенное число, то ответ false, иначе мы в любом
        случае придем к единице. Почему мы всегда придем к единице, почему нельзя уйти в бесконечность?
        
        digits |   largest   |  next
        1        9              81
        2        99             162
        3        999            243
        4        9999           324
        13       999999999999   1053
        
        Начиная с чисел длины 4, следующее число всегда имеет меньший размер, хотя бы на единицу.
        Поэтом рано или поздно мы придем к числу из трех цифр, а затем за максимум 243 итерации
        сможем определить есть ли цикл, или действительно можно получить итоговую единицу.
        
    """