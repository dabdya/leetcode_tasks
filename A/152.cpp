class Solution {
public:
    int maxProduct(vector<int>& nums) {
     
        int res = nums[0], minprod = res, maxprod = res;
        
        /*
            Идея простая: итерируемся по массиву и поддерживаем
                minprod - минимальное произведение для индекса i
                maxprod - максимальное произведение для индекса i
                res - итоговый резльутат
                
            В конкретном индексе i может возникнуть ситуация, что число по этому
            индексу отрицательное, значит оптимальный minprod найденный на предыдущем
            шаге при умножении на nums[i] сделает результат максимальным
            
            Если число по индексу i положительное, то ничего дополнительно делать не нужно
            Единственное, стоит обратить внимание на момент, когда элемент i можно включить,
            а можно и не включать: когда элемент i больше чем оптимальный maxprod посчитанный ранее
        */
        
        for (int i = 1; i < nums.size(); i++) {
            
            if (nums[i] < 0) {
                swap(minprod, maxprod);
            }
            
            maxprod = max(nums[i], maxprod * nums[i]);
            minprod = min(nums[i], minprod * nums[i]);
            
            res = max(res, maxprod);
        }
        
        return res;
    }
};