from math import log2, floor


class Solution:
    def rangeBitwiseAnd(self, left: int, right: int) -> int:
        """Граничные случаи"""
        if left == right: return left
        if left == 0: return 0

        log_left = log2(left)
        log_right = log2(right)
        
        """Если между логарифмами лежит целое число, то на промежутке есть степень двойки,
           а значит результат будет ноль"""
        if floor(log_right) > log_left:
            return 0
        
        """Если на промежутке степени двойки нет, то тогда придется посчитать промежуток
           полностью. Насколько он велик? Чем больше степень тем больше промежуток. 
           Максимальная правая граница в задаче mp = 2*31-1 Значит число 2**30 является наихудщей
           левой границей. На промежутке (2**30, 2**31-1] нет стеени двойки, и он является
           наибольшим. Значит если не удалось решить задачу за логарифмическое время,
           то придется сделать 2**31-1  -  2**30 итераций = n = 10**9"""
        res = left
        for num in range(left+1, right+1):
            res &= num
        return res
        